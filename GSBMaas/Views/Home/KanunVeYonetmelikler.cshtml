@using Microsoft.AspNetCore.Http

@{
    ViewData["Title"] = "Kanun ve Yönetmelikler";
    var userAd = Context.Session.GetString("UserAd") ?? "Misafir";
    var userSoyad = Context.Session.GetString("UserSoyad") ?? "";

    var belgeler = new List<(string Baslik, string DosyaYolu)>
    {
        ("İş Kanunu", "/docs/html/is_kanunu.html"),
        ("Borçlar Kanunu", "/docs/html/borclar_kanunu.html"),
        ("Sendikalar ve Toplu İş Sözleşmesi Kanunu", "/docs/html/sendikalar_kanunu.html"),
        ("Postalar Halinde Çalışma Yönetmeliği", "/docs/html/postalarhalindecalismayonetmeligi.html"),
        ("Yıllık Ücretli İzin Yönetmeliği", "/docs/html/yillukucretliizinyonetmeligi.html"),
        ("Hafta Tatili Yönetmeliği", "/docs/html/haftatatiliyonetmeligi.html")
    };
}

<head>
    <style>
        .custom-close {
            position: absolute;
            top: 10px;
            right: 15px;
            font-size: 28px;
            font-weight: bold;
            color: #000;
            cursor: pointer;
            background: none;
            border: none;
            outline: none;
            transition: 0.3s;
            z-index: 1050;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 50%;
        }

        .custom-close:hover {
            color: red;
            background-color: rgba(0, 0, 0, 0.05);
            transform: rotate(90deg);
        }

        .html-container {
            width: 100%;
            height: 80vh;
            border: none;
            overflow-y: auto;
            padding: 20px;
            background: white;
        }

        .modal-xl {
            max-width: 95%;
        }

        .loading {
            display: none;
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 1060;
            background: rgba(255, 255, 255, 0.9);
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }

        .search-container {
            position: sticky;
            top: 0;
            background: white;
            padding: 15px;
            border-bottom: 1px solid #dee2e6;
            z-index: 1040;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .search-input {
            flex: 1;
            padding: 10px;
            border: 1px solid #dee2e6;
            border-radius: 5px;
            font-size: 16px;
            transition: all 0.3s;
        }

        .search-count {
            background: #e9ecef;
            padding: 5px 10px;
            border-radius: 5px;
            font-size: 14px;
            color: #495057;
        }

        .highlight {
            background-color: yellow;
            padding: 0 2px;
            border-radius: 2px;
            cursor: pointer;
        }

        .highlight.active {
            background-color: #ffd700;
            box-shadow: 0 0 0 2px #ffd700;
        }

        /* HTML içeriği için stil */
        .html-content {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            color: #333;
        }

        .html-content h1, .html-content h2, .html-content h3 {
            color: #2c3e50;
            margin-top: 1.5em;
            margin-bottom: 0.5em;
        }

        .html-content p {
            margin-bottom: 1em;
        }

        .html-content ul, .html-content ol {
            margin-bottom: 1em;
            padding-left: 2em;
        }

        .html-content li {
            margin-bottom: 0.5em;
        }
    </style>
</head>

<div class="container-fluid p-0">
    <!-- Header -->
    <header class="bg-warning shadow-sm py-2">
        <div class="container">
            <div class="d-flex align-items-center">
                <a href="/" class="text-white me-3" style="text-decoration: none; font-size: 1.5rem;">
                    ↩️
                </a>
                <h1 class="h6 mb-0 text-white text-uppercase" style="margin-right: 10px;">Kanun ve Yönetmelikler</h1>
                <p class="text-white mb-0" style="font-size: 0.8rem;">Resmi kanun ve yönetmelikleri okuyabilirsiniz</p>
            </div>
        </div>
    </header>

    <!-- İçerik -->
    <main class="bg-light py-2">
        <div class="container mt-2">
            <div class="row row-cols-1 row-cols-sm-2 row-cols-lg-4" style="row-gap: 8px;">
                @for (int i = 0; i < belgeler.Count; i++)
                {
                    var renkler = new List<string> { "bg-info", "bg-danger", "bg-secondary", "bg-warning", "bg-success", "bg-primary" };
                    <div class="col">
                        <div class="card h-100 @renkler[i % renkler.Count] text-center shadow-sm text-white" onclick="openHtmlModal('@belgeler[i].Baslik', '@belgeler[i].DosyaYolu')" style="cursor: pointer;">
                            <div class="card-body d-flex flex-column justify-content-center">
                                <i class="bi bi-file-earmark-text mb-1" style="font-size: 1.5rem;"></i>
                                <h5 class="card-title text-white">@belgeler[i].Baslik</h5>
                                <div class="mt-1 d-flex align-items-center justify-content-center">
                                    <i class="bi bi-eye me-1"></i> <span>Görüntüle</span>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </main>
</div>

<!-- Yükleniyor Göstergesi -->
<div class="loading" id="loading">
    <div class="text-center">
        <div class="spinner-border text-primary" role="status">
            <span class="visually-hidden">Yükleniyor...</span>
        </div>
        <p class="mt-2 mb-0">İçerik yükleniyor...</p>
    </div>
</div>

<!-- HTML Görüntüleme Modal -->
<div class="modal fade" id="htmlModal" tabindex="-1" aria-labelledby="htmlModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="htmlModalLabel"></h5>
                <button type="button" class="custom-close" data-bs-dismiss="modal" aria-label="Close">&times;</button>
            </div>
            <div class="search-container">
                <input type="text" class="search-input" id="searchInput" placeholder="İçerikte ara...">
                <div class="search-count" id="searchCount"></div>
            </div>
            <div class="modal-body p-0">
                <div id="htmlContent" class="html-container"></div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        async function openHtmlModal(baslik, dosyaYolu) {
            const loading = document.getElementById('loading');
            const modal = new bootstrap.Modal(document.getElementById('htmlModal'));
            
            try {
                loading.style.display = 'block';
                document.getElementById('htmlModalLabel').textContent = baslik;
                
                // HTML içeriğini yükle
                const response = await fetch(dosyaYolu);
                const htmlContent = await response.text();
                
                // HTML içeriğini modal'a ekle
                document.getElementById('htmlContent').innerHTML = htmlContent;
                loading.style.display = 'none';
                modal.show();
            } catch (error) {
                console.error('İçerik yüklenirken hata oluştu:', error);
                loading.style.display = 'none';
                alert('İçerik yüklenirken bir hata oluştu. Lütfen tekrar deneyin.');
            }
        }

        // Modal kapandığında içeriği temizle
        document.getElementById('htmlModal').addEventListener('hidden.bs.modal', function () {
            document.getElementById('htmlContent').innerHTML = '';
            document.getElementById('searchInput').value = '';
        });

        // Arama fonksiyonu
        let currentHighlightIndex = -1;
        let highlights = [];

        document.getElementById('searchInput').addEventListener('input', function(e) {
            const searchText = e.target.value.toLowerCase();
            const content = document.getElementById('htmlContent');
            const textNodes = document.evaluate(
                '//text()[not(ancestor::script) and not(ancestor::style)]',
                content,
                null,
                XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE,
                null
            );

            // Önceki highlight'ları temizle
            const existingHighlights = content.getElementsByClassName('highlight');
            while (existingHighlights.length > 0) {
                const parent = existingHighlights[0].parentNode;
                parent.replaceChild(document.createTextNode(existingHighlights[0].textContent), existingHighlights[0]);
            }

            highlights = [];
            currentHighlightIndex = -1;

            if (searchText === '') {
                document.getElementById('searchCount').textContent = '';
                return;
            }

            for (let i = 0; i < textNodes.snapshotLength; i++) {
                const node = textNodes.snapshotItem(i);
                const text = node.textContent;
                const lowerText = text.toLowerCase();

                if (lowerText.includes(searchText)) {
                    const span = document.createElement('span');
                    span.className = 'highlight';
                    span.textContent = text;
                    span.addEventListener('click', () => {
                        // Tüm highlight'ları pasif yap
                        highlights.forEach(h => h.classList.remove('active'));
                        // Tıklanan highlight'ı aktif yap
                        span.classList.add('active');
                        // İlgili elemana scroll yap
                        span.scrollIntoView({ behavior: 'smooth', block: 'center' });
                    });
                    node.parentNode.replaceChild(span, node);
                    highlights.push(span);
                }
            }

            // Sonuç sayısını göster
            document.getElementById('searchCount').textContent = `${highlights.length} sonuç`;
        });

        // Klavye ile navigasyon
        document.getElementById('searchInput').addEventListener('keydown', function(e) {
            if (highlights.length === 0) return;

            if (e.key === 'Enter') {
                e.preventDefault();
                if (currentHighlightIndex >= 0) {
                    highlights[currentHighlightIndex].classList.remove('active');
                }
                currentHighlightIndex = (currentHighlightIndex + 1) % highlights.length;
                highlights[currentHighlightIndex].classList.add('active');
                highlights[currentHighlightIndex].scrollIntoView({ behavior: 'smooth', block: 'center' });
            }
        });
    </script>
}
