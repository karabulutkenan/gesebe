@model List<GSBMaas.Models.Soru>

@{
    ViewData["Title"] = "Soru & Cevap Yönetimi";
}

<header class="d-flex justify-content-between align-items-center p-1 mb-1 bg-light border-bottom">
    <h8 class=" text-uppercase">Soru & Cevap Yönetimi</h8>
    <a href="/Moderator/Cikis" class="btn btn-danger">Çıkış</a>
</header>

<div class="container mt-4 pb-5">
    <!-- Butonlar -->
    <div class="d-flex justify-content-start mb-3">
        <button class="btn btn-secondary mr-2 " id="showAll">Tüm Sorular</button>
        <button class="btn btn-warning me-2 mr-2" id="filterOnaylanmamis">Onaylanmamışlar</button>
        <button class="btn btn-success me-2 mr-2" id="openSoruEkleModal">Soru Ekle</button>
        <button class="btn btn-primary me-2 mr-2" id="openKategoriEkleModal">Kategori Ekle/Düzenle</button>
        <select id="kategoriFilter" class="form-select w-30 me-2">
            <option value="" selected>Kategori Seç</option>
            @foreach (var kategori in ViewBag.SoruKategoriler)
            {
                <option value="@kategori.Ad">@kategori.Ad</option>
            }
        </select>
        
    </div>
    <div class="mb-3">
        <input type="text" id="searchInput" class="form-control" placeholder="Soru veya kategori ara...">
    </div>


    <!-- Soru Listesi -->
    <table class="table table-hover table-bordered shadow-sm">
        <thead class="table-dark">
            <tr>
                <th>Kategori</th>
                <th>Soru</th>
                <th>Soran</th>
                <th>Cevaplayan</th>
                <th>Kaynak</th>
                <th>Soru Tarihi</th>
                <th>Cevap Tarihi</th>
                <th>İşlemler</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var soru in Model)
            {
                <tr>
                    <td>@soru.SoruKategori.Ad</td>
                    <td>@soru.SoruMetni</td>
                    <td>@soru.SoruSoran</td>
                    <td>@soru.Cevaplayan</td>
                    <td>@soru.Kaynak</td>
                    <td>@(soru.SoruTarihi.ToString("dd.MM.yyyy") ?? "-")</td>
                    <td>@(soru.CevapTarihi?.ToString("dd.MM.yyyy") ?? "-")</td>
                    <td>
                        <button class="btn btn-sm btn-primary edit-soru" data-id="@soru.Id">Düzenle</button>
                        <button class="btn btn-sm btn-danger delete-soru" data-id="@soru.Id">Sil</button>

                        @if (!soru.OnaylandiMi)
                        {
                            <button class="btn btn-sm btn-success onayla-soru" data-id="@soru.Id">Onayla</button>
                        }
                        else
                        {
                            <button class="btn btn-sm btn-secondary" disabled>Onaylanmış</button>
                        }
                        @if (soru.Cevaplayan=="Beklemede")
                        {
                            <button class="btn btn-sm btn-warning cevapla-soru" data-id="@soru.Id" data-soru="@soru.SoruMetni">
                                Cevapla
                        </button>
                        }
                    </td>
                </tr>
            }
        </tbody>

    </table>


<!-- ✅ Soru Ekleme Modalı -->
<div class="modal fade" id="soruEkleModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Soru Ekle</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="soruForm">
                    <div class="mb-3">
                        <label class="form-label">Kategori Seçin</label>
                        <select id="kategoriId" name="kategoriId" class="form-select">
                            <option disabled selected>Kategori seçiniz</option>
                            @foreach (var kategori in ViewBag.SoruKategoriler)
                            {
                                <option value="@kategori.Id">@kategori.Ad</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Soru</label>
                        <input type="text" id="soruMetni" name="SoruMetni" class="form-control">
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Cevap Metni</label>
                        <textarea id="cevapMetni" name="CevapMetni" class="form-control" rows="4"></textarea>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Cevaplayan</label>
                        <input type="text" class="form-control" value="Sistem Yöneticisi" disabled>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Kaynak</label>
                        <input type="text" id="kaynak" name="Kaynak" class="form-control">
                    </div>
                    <button type="submit" class="btn btn-primary w-100">Soruyu Ekle</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- ✅ Kategori Ekleme/Düzenleme Modalı -->
<div class="modal fade" id="kategoriEkleModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Kategori Ekle / Düzenle</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <!-- ✅ Kategori Ekleme Formu -->
                <form id="kategoriForm">
                    <input type="hidden" id="kategoriId" name="kategoriId"> <!-- Güncellenecek kategori ID -->
                    <div class="mb-3">
                        <label class="form-label">Kategori Adı</label>
                        <input type="text" id="kategoriAd" name="Ad" class="form-control">
                    </div>
                    <button type="submit" class="btn btn-success w-100">Kaydet</button>
                </form>

                <hr>

                <!-- ✅ Mevcut Kategoriler Listesi -->
                <h6 class="mt-3">Mevcut Kategoriler</h6>
                <ul class="list-group" id="kategoriListesi">
                    @foreach (var kategori in ViewBag.SoruKategoriler)
                    {
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            <span>@kategori.Ad</span>
                            <div>
                                <button class="btn btn-sm btn-warning edit-kategori"
                                        data-id="@kategori.Id" data-ad="@kategori.Ad">
                                    Düzenle
                                </button>
                                <button class="btn btn-sm btn-danger delete-kategori"
                                        data-id="@kategori.Id">
                                    Sil
                                </button>
                            </div>
                        </li>
                    }
                </ul>

            </div>
        </div>
    </div>
</div>



<!-- ✅ Soru Düzenleme Modalı -->
<div class="modal fade" id="soruDuzenleModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Soru Düzenle</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="soruDuzenleForm">
                    <input type="hidden" id="duzenleSoruId" name="id"> <!-- Güncellenecek soru ID'si -->

                    <div class="mb-3">
                        <label class="form-label">Kategori Seçin</label>
                        <select id="duzenleKategoriId" name="kategoriId" class="form-select">
                            <option disabled selected>Kategori seçiniz</option>
                            @foreach (var kategori in ViewBag.SoruKategoriler)
                            {
                                <option value="@kategori.Id">@kategori.Ad</option>
                            }
                        </select>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Soru</label>
                        <input type="text" id="duzenleSoruMetni" name="SoruMetni" class="form-control">
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Cevap Metni</label>
                        <textarea id="duzenleCevapMetni" name="CevapMetni" class="form-control" rows="4"></textarea>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Kaynak</label>
                        <input type="text" id="duzenleKaynak" name="Kaynak" class="form-control">
                    </div>

                    <button type="submit" class="btn btn-warning w-100">Soruyu Güncelle</button>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- ✅ Soru Onaylama Modalı -->
<div class="modal fade" id="soruOnayModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Soru Onaylama</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Bu soruyu onaylamak istediğinize emin misiniz?</p>
                <input type="hidden" id="onaySoruId">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                <button type="button" class="btn btn-success" id="onaylaSoruBtn">Evet, Onayla</button>
            </div>
        </div>
    </div>
</div>

</div>
<!-- ✅ Cevap Yazma Modalı -->
<div class="modal fade" id="cevapModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Soruyu Cevapla</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p><strong>Soru:</strong> <span id="modalSoruMetni"></span></p>

                <!-- ✅ Cevap Metni -->
                <label class="form-label mt-2">Cevabınızı yazın:</label>
                <!-- Cevap Yazma Modalı'ndaki textarea'nın ID'sini değiştirin -->
<textarea id="modalCevapMetni" class="form-control" rows="4" placeholder="Cevabınızı yazın..." required></textarea>

                <!-- ✅ Kaynak Alanı -->
                <label class="form-label mt-2">Kaynak:</label>
                <input type="text" id="cevapKaynak" class="form-control" placeholder="Kaynak ekleyebilirsiniz. (Opsiyonel)">

                <input type="hidden" id="cevapSoruId">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                <button type="button" class="btn btn-success" id="cevapKaydetBtn">Cevabı Kaydet</button>
            </div>
        </div>
    </div>
</div>


<!-- ✅ JavaScript -->

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Sayfa yüklendiğinde otomatik olarak onaylanmamışları göster
        filterOnaylanmamis();

        // ✅ Onaylanmamışları Filtreleme Fonksiyonu
        function filterOnaylanmamis() {
            document.querySelectorAll("tbody tr").forEach(row => {
                if (row.querySelector(".btn-success.onayla-soru")) {
                    row.style.display = "";
                } else {
                    row.style.display = "none";
                }
            });

            // Butonları vurgula
            document.getElementById("filterOnaylanmamis").classList.add("active");
            document.getElementById("showAll").classList.remove("active");
        }

        // ✅ MODAL AÇMA - Soru Ekle
        document.getElementById("openSoruEkleModal").addEventListener("click", function () {
            document.getElementById("soruForm").reset();
            document.getElementById("soruForm").setAttribute("data-id", "");
            var modal = new bootstrap.Modal(document.getElementById("soruEkleModal"));
            modal.show();
        });

        // ✅ MODAL AÇMA - Kategori Ekle/Düzenle
        document.getElementById("openKategoriEkleModal").addEventListener("click", function () {
            document.getElementById("kategoriForm").reset();
            document.getElementById("kategoriId").value = ""; // Yeni kategori ekleme için ID sıfırla
            var modal = new bootstrap.Modal(document.getElementById("kategoriEkleModal"));
            modal.show();
        });

        // ✅ SORU EKLEME VEYA GÜNCELLEME
        document.getElementById("soruForm").addEventListener("submit", function (event) {
            event.preventDefault();
            let formData = new FormData(this);
            let soruId = this.getAttribute("data-id");
            let url = soruId ? `/Moderator/SoruGuncelle/${soruId}` : "/Moderator/SoruEkle";
            let method = "POST"; // Güncellemeyi de POST ile yapıyoruz

            fetch(url, { method: method, body: formData })
                .then(response => response.json())
                .then(data => {
                    alert(data.success ? "✅ " + data.message : "❌ Hata: " + data.message);
                    location.reload();
                })
                .catch(error => alert("⚠️ Sunucu hatası: " + error.message));
        });

        // ✅ KATEGORİ EKLEME VEYA GÜNCELLEME
        document.getElementById("kategoriForm").addEventListener("submit", function (event) {
            event.preventDefault();
            let formData = new FormData(this);
            let kategoriId = document.getElementById("kategoriId").value;
            let url = kategoriId ? `/Moderator/SoruKategoriGuncelle/${kategoriId}` : "/Moderator/SoruKategoriEkle";

            fetch(url, { method: "POST", body: formData })
                .then(response => response.json())
                .then(data => {
                    alert(data.success ? "✅ " + data.message : "❌ Hata: " + data.message);
                    location.reload();
                })
                .catch(error => alert("⚠️ Sunucu hatası: " + error.message));
        });

        // ✅ EVENT DELEGATION: Kategori Silme (Çalışması için böyle olmalı)
        document.getElementById("kategoriListesi").addEventListener("click", function (event) {
            if (event.target.classList.contains("delete-kategori")) {
                let kategoriId = event.target.getAttribute("data-id");

                if (!kategoriId) {
                    alert("⚠️ Hata: Kategori ID bulunamadı!");
                    return;
                }

                if (confirm("Bu kategoriyi silmek istediğinize emin misiniz?")) {
                    fetch(`/Moderator/SoruKategoriSil/${kategoriId}`, { method: "DELETE" })
                        .then(response => response.json())
                        .then(data => {
                            alert(data.success ? "✅ " + data.message : "❌ Hata: " + data.message);
                            location.reload();
                        })
                        .catch(error => alert("⚠️ Sunucu hatası: " + error.message));
                }
            }
        });


        // ✅ EVENT DELEGATION: Kategori Düzenleme
        document.getElementById("kategoriListesi").addEventListener("click", function (event) {
            if (event.target.classList.contains("edit-kategori")) {
                let kategoriId = event.target.getAttribute("data-id");
                let kategoriAd = event.target.getAttribute("data-ad");

                if (!kategoriId || !kategoriAd) {
                    alert("⚠️ Hata: Kategori ID veya adı bulunamadı!");
                    return;
                }

                document.getElementById("kategoriId").value = kategoriId;
                document.getElementById("kategoriAd").value = kategoriAd;

                var modal = new bootstrap.Modal(document.getElementById("kategoriEkleModal"));
                modal.show();
            }
        });


        // ✅ SORU SİLME (ÇALIŞIR HALDE)
        document.querySelectorAll(".delete-soru").forEach(button => {
            button.addEventListener("click", function () {
                let soruId = this.getAttribute("data-id");

                if (confirm("Bu soruyu silmek istediğinize emin misiniz?")) {
                    fetch(`/Moderator/SoruSil/${soruId}`, { method: "DELETE" })
                        .then(response => response.json())
                        .then(data => {
                            alert(data.success ? "✅ " + data.message : "❌ Hata: " + data.message);
                            location.reload();
                        })
                        .catch(error => alert("⚠️ Sunucu hatası: " + error.message));
                }
            });
        });

        // ✅ SORU DÜZENLEME (DOĞRU MODAL AÇILIYOR)
        document.querySelectorAll(".edit-soru").forEach(button => {
            button.addEventListener("click", function () {
                let soruId = this.getAttribute("data-id");

                fetch(`/Moderator/GetSoru/${soruId}`)
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            document.getElementById("duzenleSoruId").value = soruId;
                            document.getElementById("duzenleKategoriId").value = data.kategoriId;
                            document.getElementById("duzenleSoruMetni").value = data.soruMetni;
                            document.getElementById("duzenleCevapMetni").value = data.cevapMetni;
                            document.getElementById("duzenleKaynak").value = data.kaynak;

                            var modal = new bootstrap.Modal(document.getElementById("soruDuzenleModal"));
                            modal.show();
                        } else {
                            alert("❌ Hata: " + data.message);
                        }
                    })
                    .catch(error => alert("⚠️ Sunucu hatası: " + error.message));
            });
        });

        // ✅ SORU GÜNCELLEME FORMU (DOĞRU MODALDA)
        document.getElementById("soruDuzenleForm").addEventListener("submit", function (event) {
            event.preventDefault();

            let formData = new FormData(this);
            let soruId = document.getElementById("duzenleSoruId").value;

            fetch(`/Moderator/SoruGuncelle/${soruId}`, { method: "POST", body: formData })
                .then(response => response.json())
                .then(data => {
                    alert(data.success ? "✅ " + data.message : "❌ Hata: " + data.message);
                    location.reload();
                })
                .catch(error => alert("⚠️ Sunucu hatası: " + error.message));
        });

        // ✅ Onaylama Modalını Aç
        document.querySelectorAll(".onayla-soru").forEach(button => {
            button.addEventListener("click", function () {
                let soruId = this.getAttribute("data-id");
                document.getElementById("onaySoruId").value = soruId;

                let modal = new bootstrap.Modal(document.getElementById("soruOnayModal"));
                modal.show();
            });
        });

        // ✅ Soru Onaylama İşlemi
        document.getElementById("onaylaSoruBtn").addEventListener("click", function () {
            let soruId = document.getElementById("onaySoruId").value;

            fetch(`/Moderator/SoruOnayla/${soruId}`, { method: "POST" })
                .then(response => response.json())
                .then(data => {
                    alert(data.success ? "✅ " + data.message : "❌ Hata: " + data.message);
                    location.reload();
                })
                .catch(error => alert("⚠️ Sunucu hatası: " + error.message));
        });

        // ✅ Onaylanmamışları Filtreleme
        document.getElementById("filterOnaylanmamis").addEventListener("click", filterOnaylanmamis);

        // ✅ Tüm Soruları Gösterme
        document.getElementById("showAll").addEventListener("click", function () {
            document.querySelectorAll("tbody tr").forEach(row => {
                row.style.display = "";
            });

            // Butonları vurgula
            document.getElementById("showAll").classList.add("active");
            document.getElementById("filterOnaylanmamis").classList.remove("active");
        });

        // ✅ Arama Fonksiyonu
        document.getElementById("searchInput").addEventListener("input", function () {
            let searchTerm = this.value.toLowerCase();

            document.querySelectorAll("tbody tr").forEach(row => {
                let kategori = row.cells[0].textContent.toLowerCase();
                let soru = row.cells[1].textContent.toLowerCase();

                if (kategori.includes(searchTerm) || soru.includes(searchTerm)) {
                    row.style.display = "";
                } else {
                    row.style.display = "none";
                }
            });
        });

        // ✅ Kategoriye Göre Filtreleme
        document.getElementById("kategoriFilter").addEventListener("change", function () {
            let selectedKategori = this.value.toLowerCase();

            document.querySelectorAll("tbody tr").forEach(row => {
                let kategori = row.cells[0].textContent.toLowerCase();

                if (selectedKategori === "" || kategori === selectedKategori) {
                    row.style.display = "";
                } else {
                    row.style.display = "none";
                }
            });
        });

        // ✅ "Cevapla" Butonuna Basınca Modalı Aç
        document.querySelectorAll(".cevapla-soru").forEach(button => {
            button.addEventListener("click", function () {
                let soruId = this.getAttribute("data-id");
                let soruMetni = this.getAttribute("data-soru");

                document.getElementById("modalSoruMetni").textContent = soruMetni;
                document.getElementById("cevapSoruId").value = soruId;
                document.getElementById("modalCevapMetni").value = ""; // ID değiştirildi
                document.getElementById("cevapKaynak").value = ""; // Önceki değeri temizle

                let modal = new bootstrap.Modal(document.getElementById("cevapModal"));
                modal.show();
            });
        });

        // ✅ Cevap Kaydetme İşlemi
        document.getElementById("cevapKaydetBtn").addEventListener("click", function () {
            let soruId = document.getElementById("cevapSoruId").value;
            let cevapMetniElement = document.getElementById("modalCevapMetni"); // ID değiştirildi
            let kaynakElement = document.getElementById("cevapKaynak");

            let cevapMetni = cevapMetniElement.value.trim();
            let kaynak = kaynakElement.value.trim();

            // 🛠️ **Konsolda hata ayıklama için log ekleyelim**
            console.log("Soru ID:", soruId);
            console.log("Cevap Metni:", cevapMetni);
            console.log("Kaynak:", kaynak);

            // ✅ Eğer cevap metni boşsa uyarı ver ve işlemi durdur
            if (!cevapMetni || cevapMetni.length === 0) {
                alert("⚠️ Lütfen bir cevap girin.");
                cevapMetniElement.focus(); // Kullanıcıyı tekrar giriş alanına yönlendir
                return;
            }

            let formData = new FormData();
            formData.append("id", soruId);
            formData.append("cevapMetni", cevapMetni);
            formData.append("kaynak", kaynak);

            fetch("/Moderator/CevapEkle", {
                method: "POST",
                body: formData
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error("Sunucudan geçerli bir yanıt alınamadı.");
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success) {
                        alert("✅ Cevap başarıyla kaydedildi!");
                        location.reload();
                    } else {
                        alert("❌ Hata: " + data.message);
                    }
                })
                .catch(error => {
                    alert("⚠️ Sunucu hatası: " + error.message);
                    console.error("Hata detayları:", error);
                });
        });
    });
</script>


